@page
@model RegisterModel
@inject Remotely.Server.Services.IApplicationConfig AppConfig
@{
    ViewData["Title"] = "Register";
}


<div class="text-center">
    <h1 class="icon-title">Remotly</h1>
</div>
@if (AppConfig.MaxOrganizationCount < 0 || Model.OrganizationCount < AppConfig.MaxOrganizationCount)
{
    <div id="login-main-panel" class="d-flex justify-content-center card login-panel p-2 m-auto">
        <h1>@ViewData["Title"]</h1>
        <p class="subtext mb-0">Create a new account.</p>

        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h4></h4>
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label" asp-for="Input.Email"></label>
                <input asp-for="Input.Email" class="form-control" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label" asp-for="Input.Password"></label>
                <input asp-for="Input.Password" class="form-control" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label" asp-for="Input.ConfirmPassword"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="mt-2 text-center">
                <button type="submit" class="btn btn-primary">Register</button>
            </div>
        </form>
    </div>
}
else
{

    <div id="login-main-panel" class="d-felx justify-content-center card login-panel p-2 m-auto">
        <h1>@ViewData["Title"]</h1>
        <p class="subtext mb-0">Registration is disabled.</p>
    </div>
}

@*<div class="col-md-6 col-md-offset-2">
    <section>
    <h4>Use another service to register.</h4>
    <hr />
    @{
    if ((Model.ExternalLogins?.Count ?? 0) == 0)
    {
    <div>
    <p>
    There are no external authentication services configured. See <a
    href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
    for details on setting up this ASP.NET application to support logging in via external services.
    </p>
    </div>
    }
    else
    {
    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post"
    class="form-horizontal">
    <div>
    <p>
    @foreach (var provider in Model.ExternalLogins)
    {
    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your
    @provider.DisplayName account">@provider.DisplayName</button>
    }
    </p>
    </div>
    </form>
    }
    }
    </section>
    </div>*@

@section Scripts {
<partial name="_ValidationScriptsPartial" />
}
